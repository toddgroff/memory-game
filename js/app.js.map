{"version":3,"sources":["app.js","check-match.js","game-board.js","game-cards.js","not-found.js","init.js"],"names":["app","router","Rlite","checkMatch","compareCards","firstCard","secondCard","val","disableCheck","setTimeout","setCheck","card","prop","state","$","on","currentCard","this","undefined","add","gameBoard","numPairs","template","_","html","variable","board","cards","gameCards","swap","arr","x","y","tmp","shuffle","i","length","randomIndex","Math","floor","random","split","slice","concat","notFound","processHash","hash","location","run","substr","window","addEventListener"],"mappings":"AACA,GAAAA,MACAC,OAAAC,QCFAF,KAAAG,WAAA,WAoBA,QAAAC,GAAAC,EAAAC,GACAD,EAAAE,QAAAD,EAAAC,OACAC,EAAAH,GACAG,EAAAF,IAEAG,WAAA,WACAC,EAAAL,GAAA,GACAK,EAAAJ,GAAA,IACA,KAIA,QAAAE,GAAAG,GACAA,EAAAC,KAAA,YAAA,GAGA,QAAAF,GAAAC,EAAAE,GACAF,EAAAC,KAAA,UAAAC,GApCA,GAAAR,EAEAS,GAAA,eAAAC,GAAA,QAAA,WACA,GAAAC,GAAAF,EAAAG,KAEA,IAAAC,SAAAb,EACAA,EAAAW,MAEA,CAAA,GAAAX,EAAA,KAAAW,EAAA,GACA,OAAA,CAGAZ,GAAAC,EAAAW,GAEAX,EAAAa,WCdAlB,IAAAC,OAAAkB,IAAA,GAAA,WACAnB,IAAAoB,UAAA,KAGApB,IAAAC,OAAAkB,IAAA,OAAA,WACAnB,IAAAoB,UAAA,KAGApB,IAAAC,OAAAkB,IAAA,OAAA,WACAnB,IAAAoB,UAAA,MAGApB,IAAAoB,UAAA,SAAAC,GACA,GAAAC,GAAAC,EAAAD,SAAAR,EAAA,cAAAU,QAAAC,SAAA,MACAC,EAAAJ,GACAK,MAAA3B,IAAA4B,UAAAP,IAGAP,GAAA,iBAAAU,KAAAE,GAEA1B,IAAAG,cCnBAH,IAAA4B,UAAA,SAAAP,GAOA,QAAAQ,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAAC,EACAD,GAAAC,GAAAD,EAAAE,GACAF,EAAAE,GAAAC,EAIA,QAAAC,GAAAJ,GACA,IAAA,GAAAK,GAAA,EAAAA,EAAAL,EAAAM,SAAAD,EAAA,CACA,GAAAE,GAAAC,KAAAC,MAAAD,KAAAE,SAAAV,EAAAM,OACAP,GAAAC,EAAAK,EAAAE,GAGA,MAAAP,GAnBA,GAAAH,GAAA,qBAAAc,MAAA,IAAAC,MAAA,EAAArB,EAsBA,OAnBAM,GAAAA,EAAAgB,OAAAhB,GAmBAO,EAAAP,ICzBA3B,IAAA4C,SAAA,WACA9B,EAAA,iBAAAU,KACA,0DCFA,WAGA,QAAAqB,KACA,GAAAC,GAAAC,SAAAD,MAAA,GACA9C,KAAAC,OAAA+C,IAAAF,EAAAG,OAAA,KACAjD,IAAA4C,WAIAM,OAAAC,iBAAA,aAAAN,GACAA","file":"app.js","sourcesContent":["// The namespace for this application\nvar app = {\n  router: Rlite()\n};\n","app.checkMatch = function() {\n  var firstCard;\n\n  $('.card--flip').on('click', function () {\n    var currentCard = $(this)\n\n    if (firstCard === undefined) {\n      firstCard = currentCard;\n\n    } else if (firstCard[0] === currentCard[0]) {\n      return false;\n\n    } else {\n      compareCards(firstCard, currentCard);\n\n      firstCard = undefined\n    }\n\n  });\n\n  function compareCards(firstCard, secondCard) {\n    if (firstCard.val() === secondCard.val()) {\n      disableCheck(firstCard);\n      disableCheck(secondCard);\n    } else {\n      setTimeout(function() {\n        setCheck(firstCard, false);\n        setCheck(secondCard, false);\n      }, 750);\n    }\n  };\n\n  function disableCheck(card) {\n    card.prop('disabled', true);\n  }\n\n  function setCheck(card, state) {\n    card.prop('checked', state);\n  }\n\n};\n\n\n\n\n// app.checkMatch = function() {\n//   var set = [];\n//   var firstCard;\n//   var firstCheck;\n//   var secondCard;\n//   var secondCheck;\n//\n//   $('.board .card').on('click', function (e) {\n//     e.stopPropagation();\n//\n//     if (set.length === 0) {\n//       firstCard = $(this).find('.card--icon').text();\n//       firstCheck = $(this).find('.card--flip');\n//\n//\n//       console.log(firstCard);\n//       console.log(firstCheck);\n//\n//       setTimeout( function() {\n//         firstCheck.prop('disabled', true);\n//       }, 250);\n//\n//       set.push(firstCard);\n//\n//       return;\n//\n//     } else {\n//       secondCard = $(this).find('.card--icon').text();\n//       secondCheck = $(this).find('.card--flip');\n//\n//       console.log(secondCard);\n//       console.log(secondCheck);\n//\n//       set.push(secondCard);\n//\n//       // compareCards();\n//     }\n//   });\n//\n//   function compareCards() {\n//   if (set[0] === set[1]) {\n//       secondCheck.prop('disabled', true);\n//   } else {\n//       firstCard.prop('disabled', false);\n//       firstCheck.prop('checked', false);\n//       secondCheck.prop('checked', false);\n//     }\n//\n//     firstCard = undefined;\n//     secondCard = undefined;\n//     set = [];\n//   };\n// };\n//\n\n\n\n\n//\n//\n// // var firstCard = $(this).children('.card--icon').val();\n// // var firstCheck = $(this).find('.card--flip');\n// //\n// // setTimeout( function() {\n// //   firstCheck.prop('disabled', true);\n// // }, 250);\n//\n// // ('.card').click(function() {\n// //   var thatCard = $(this).val();\n// //   var thatCheck = $(this).find('.card--flip');\n// //\n// //   if (thisCard === thatCard) {\n// //     thatCheck.prop('disabled', true);\n// //   } else {\n// //     thisCard.prop('disabled', false);\n// //     thisCheck.prop('unchecked');\n// //     thatCheck.prop('unchecked');\n// //   }\n//\n//   // var thisCard = undefined;\n//   // var thisCheck = undefined;\n//   // var thatCard = undefined;\n//   // var thatCheck = undefined;\n//\n// // });\n","//displays array from game-cards on page\n  app.router.add('', function () {\n    app.gameBoard(8);\n  });\n\n  app.router.add('easy', function () {\n    app.gameBoard(8);\n  });\n\n  app.router.add('hard', function () {\n    app.gameBoard(16);\n  });\n\napp.gameBoard = function (numPairs) {\n    var template = _.template($('#gameBoard').html(), { variable: 'm' });\n    var board = template({\n      cards: app.gameCards(numPairs)\n    });\n\n    $('.main-content').html(board);\n\n    app.checkMatch();\n};\n","// gameCards returns array with specified number of pairs\n// of cards in random order\napp.gameCards = function (numPairs) {\n  var cards = 'abcdmnopqrstuvwxyz'.split('').slice(0, numPairs);\n\n  // double the array\n  cards = cards.concat(cards);\n\n  // swap two values in the array\n  function swap(arr, x, y) {\n    var tmp = arr[x];\n    arr[x] = arr[y];\n    arr[y] = tmp;\n  }\n\n  // shuffle the cards using swap function\n  function shuffle(arr) {\n    for (var i = 0; i < arr.length; ++i) {\n      var randomIndex = Math.floor(Math.random() * arr.length);\n      swap(arr, i, randomIndex);\n    }\n\n    return arr;\n  }\n\n  return shuffle(cards);\n};\n","app.notFound = function() {\n  $('.main-content').html(\n    '<h1>404 Not Found!</h1><a href=\"#\">Return to main</a>'\n  );\n};\n","(function () {\n\n  // Hash-based routing\n  function processHash() {\n    var hash = location.hash || '#';\n    if (!app.router.run(hash.substr(1))) {\n      app.notFound();\n    }\n  }\n\n  window.addEventListener('hashchange', processHash);\n  processHash();\n\n})();\n"],"sourceRoot":"/source/"}